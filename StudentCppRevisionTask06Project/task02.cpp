#include "tasks.h"

/*	Task 02. Chess Pawn [шахматная пешка]
*
*	Шахматная пешка - это самая слабая шахматная фигура,
*	но во время игры может превратиться в любую шахматную фигуру кроме Короля.
*	Предположим, пешка ходит только вперёд по вертикали и только на одну клетку.
*	Даны две различные клетки шахматной доски, определите,
*	может ли пешка попасть с первой клетки на вторую одним ходом.
*
*	Примечание
*	1) Чтобы увидеть решение и разработать алгоритм, нарисуйте себе шахматную доску
*	и поставьте в клетках соответствующие координаты по x и y.
*	2) Помните, пешка всегда начинает свой ход со второй горизонтальной линии, т.е.
*	координаты клеток по y не должны быть равны 1. 
*	2) Не забудьте "защиту от дурака". Если пользователь задаёт неверные коориднаты клеток,
*	то функция должна возвратить булевское значение false.
*	3) Для решения достаточно встроенных в язык арифметических операций, операций отношения, 
*	логических операций и условной операции (?:).
*	
*	Формат входных данных [input]
*	Функция принимает на вход четыре целочисленных значения,
*	задающие номер столбца (при корректных данных - от 1 до 8) 
*	и номер строки (при корректных данных - от 2 до 8) сначала для первой клетки (x1, y1),
*	потом для второй клетки (x2, y2), где x - координата клетки по горизонтали,
*	а y - координата клетки по вертикали.
*
*	Формат выходных данных [output]
*	Функция должна возвратить булевское значение - результат решения.
*
*	[ input 1]: 4 4 5 5
*	[output 1]: false
*
*	[ input 2]: 4 4 4 5
*	[output 2]: true
*/

bool task02(int x1, int y1, int x2, int y2) {
	return false;
}
